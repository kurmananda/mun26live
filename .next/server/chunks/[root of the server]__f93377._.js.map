{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/kurmananda/projects/mun/mun26li/mun26live/src/app/lib/mongo.js"],"sourcesContent":["import mongoose from \"mongoose\"\nconst connectDB = async ()=>{\n    try{\n        if(mongoose.connection.readyState === 0){\n            await mongoose.connect(process.env.MONGO_URL);\n            console.log('db connected')\n        }\n    }catch(error){\n        console.log(error);\n    }\n};\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY;IACd,IAAG;QACC,IAAG,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,KAAK,GAAE;YACpC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;YAC5C,QAAQ,GAAG,CAAC;QAChB;IACJ,EAAC,OAAM,OAAM;QACT,QAAQ,GAAG,CAAC;IAChB;AACJ;uCAEe"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/kurmananda/projects/mun/mun26li/mun26live/src/app/models/user.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport { Schema } from \"mongoose\";\n\nconst someschema = new Schema({\n    id:{\n        type:String,\n        default:'hi',\n        required:true,\n    },\n    email : {\n        type: String,\n        required: true,\n    },\n    name:{\n        type: String,\n        required : true,\n    },\n    role:{\n        type: String,\n        required: true,\n        default: 'user',\n    },\n    bioo:{\n        type: String,\n        default: 'I am excited to be involved in this',\n        trim:true,\n    },\n    mobile:{\n        type: String,\n        default:'0000000000',\n        trim:true,\n    },\n    college:{\n        type: String,\n        default:'your college',\n        trim:true,\n    },\n    country:{\n        type: String,\n        default:'none',\n        trim:true,\n    },\n    comt:{\n        type: String,\n        default:'none',\n        trim:true,\n    },\n    status:{\n        type: String,\n        default : 'A country has not been chosen yet',\n        trim: true,\n    }\n\n},\n{\n    timestamps:true\n});\nconst crntuser = mongoose.models.kurmi || mongoose.model('kurmi',someschema);\n\nexport default crntuser;"],"names":[],"mappings":";;;AAAA;;;AAGA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC1B,IAAG;QACC,MAAK;QACL,SAAQ;QACR,UAAS;IACb;IACA,OAAQ;QACJ,MAAM;QACN,UAAU;IACd;IACA,MAAK;QACD,MAAM;QACN,UAAW;IACf;IACA,MAAK;QACD,MAAM;QACN,UAAU;QACV,SAAS;IACb;IACA,MAAK;QACD,MAAM;QACN,SAAS;QACT,MAAK;IACT;IACA,QAAO;QACH,MAAM;QACN,SAAQ;QACR,MAAK;IACT;IACA,SAAQ;QACJ,MAAM;QACN,SAAQ;QACR,MAAK;IACT;IACA,SAAQ;QACJ,MAAM;QACN,SAAQ;QACR,MAAK;IACT;IACA,MAAK;QACD,MAAM;QACN,SAAQ;QACR,MAAK;IACT;IACA,QAAO;QACH,MAAM;QACN,SAAU;QACV,MAAM;IACV;AAEJ,GACA;IACI,YAAW;AACf;AACA,MAAM,WAAW,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAQ;uCAElD"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/kurmananda/projects/mun/mun26li/mun26live/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth/next\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport connectDB from \"../../../lib/mongo\";\nimport crntuser from \"../../../models/user\";\n\nconst authOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n  secret:'abcdef'\n  ,\n  callbacks: {\n    // On user sign-in, check if the user exists or create a new user\n    async signIn({ user, account }) {\n      if (account.provider === \"google\") {\n        const { id, name, email } = user;\n\n        try {\n          await connectDB();\n          const userExists = await crntuser.findOne({ email });\n\n          if (!userExists) {\n            // Create a new user if one doesn't already exist\n            const res = await fetch(\"https:muniist.vercel.app/api/contact\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                id,\n                name,\n                email,\n              }),\n            });\n\n            if (!res.ok) {\n              console.log(\"Error creating user\");\n              return false;\n            }\n          }\n\n          return true; // Allow sign-in\n        } catch (error) {\n          console.log(\"Sign-in error:\", error);\n          return false;\n        }\n      }\n\n      return false; // Disallow sign-in if the provider is not Google\n    },\n\n\n  },\n};\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,QAAO;IAEP,WAAW;QACT,iEAAiE;QACjE,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE;YAC5B,IAAI,QAAQ,QAAQ,KAAK,UAAU;gBACjC,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG;gBAE5B,IAAI;oBACF,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAS,AAAD;oBACd,MAAM,aAAa,MAAM,8HAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;wBAAE;oBAAM;oBAElD,IAAI,CAAC,YAAY;wBACf,iDAAiD;wBACjD,MAAM,MAAM,MAAM,MAAM,wCAAwC;4BAC9D,QAAQ;4BACR,SAAS;gCACP,gBAAgB;4BAClB;4BACA,MAAM,KAAK,SAAS,CAAC;gCACnB;gCACA;gCACA;4BACF;wBACF;wBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;4BACX,QAAQ,GAAG,CAAC;4BACZ,OAAO;wBACT;oBACF;oBAEA,OAAO,MAAM,gBAAgB;gBAC/B,EAAE,OAAO,OAAO;oBACd,QAAQ,GAAG,CAAC,kBAAkB;oBAC9B,OAAO;gBACT;YACF;YAEA,OAAO,OAAO,iDAAiD;QACjE;IAGF;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}